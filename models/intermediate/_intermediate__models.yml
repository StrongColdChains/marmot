version: 2

models:
  - name: int_temperature_intervals
    description: > 
      A view into whether a time series row has been considered as being part of a temperature alarm.
      This view could also be seen as a tool to turn time series data into alarm time series data, where
      each row sent by an EMD also has information about whether an alarm is active.
    columns:
      - name: cce_id
        data_type: text
      - name: monitor_id
        data_type: text
      - name: temperature
        data_type: float
      - name: created_at
        description: "When the time series data was measured by the monitor"
        data_type: timestamp
      - name: received_at
        description: "When the data was received by the server"
        data_type: timestamp
      - name: minutes_since_previous_datapoint
        description: "The minutes since the previous datapoint was created for a given cce_id + monitor_id"
        data_type: float
      # Hold on - how am I supposed to document columns when the names of the columns are
      # dynamically generated by Jinja???
      # TODO: Figure this out.
      # Probably need to add an alarm_type column to handle this stuff rather than
      # creating new column names.
      - name: threshold_is_crossed
        description: "A flag to determine whether the alarm threshold is crossed by this datapoint"
        data_type: boolean
      - name: reset_group
        description: "used to track whether our cumulative tracker needs to be reset"
        data_type: integer
      - name: cumulative_threshold_minutes
        description: "How long the threshold has been crossed"
        data_type: integer
  - name: temperature_alarms
    description: "Temperature alarms defined by WHO PQS"
    columns:
      - name: begin
        description: "When the freeze alarm begins"
        data_tests:
          - not_null
      - name: end
        description: "When the freeze alarm ends"
      - name: cce_id
        data_type: text
      - name: monitor_id
        data_type: text
      - name: alarm_type
        data_type: text
  - name: int_temperature_cce_type_range
    description: "temperature_ts with additional inferred information to be used for detecting CCE type"
    columns:
      - name: temperature_cce_type_range
        # TODO: can we make this an enum?
        description: "[fridge, freezer, ambient, invalid_low, invalid_high]"
        data_type: text
        data_tests:
          - not_null